Name: SqlExpression
Body:
Lambda (this,
        Lambda (stream,
                Let (body,
                     Call (None,
                           Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]] op_LessBarGreater[token,asqlexpr](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]]),
                           [Call (None,
                                  Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]] op_LessBarGreater[token,asqlexpr](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]]),
                                  [Call (None,
                                         Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]] op_LessBarGreater[token,asqlexpr](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]]),
                                         [Call (None,
                                                Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]] op_LessBarGreater[token,asqlexpr](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]]),
                                                [Call (None,
                                                       Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]] op_BarGreaterGreater[token,String,asqlexpr](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.String,Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[System.String,Test3.Parser+Ast+asqlexpr]),
                                                       [Lambda (arg00,
                                                                Call (Some (this),
                                                                      Result`2 Localvar[ITokenLexer`1](ITokenLexer`1),
                                                                      [arg00])),
                                                        Lambda (s,
                                                                NewUnionCase (asqlexpr.LocalVar,
                                                                              s))]),
                                                 Call (None,
                                                       Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]] op_BarGreaterGreater[token,String,asqlexpr](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.String,Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[System.String,Test3.Parser+Ast+asqlexpr]),
                                                       [Lambda (arg00,
                                                                Call (Some (this),
                                                                      Result`2 Ident[ITokenLexer`1](ITokenLexer`1),
                                                                      [arg00])),
                                                        Lambda (s,
                                                                NewUnionCase (asqlexpr.Ident,
                                                                              s))])]),
                                          Call (None,
                                                Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]] op_BarGreaterGreater[token,String,asqlexpr](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.String,Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[System.String,Test3.Parser+Ast+asqlexpr]),
                                                [Lambda (arg00,
                                                         Call (Some (this),
                                                               Result`2 Globalvar[ITokenLexer`1](ITokenLexer`1),
                                                               [arg00])),
                                                 Lambda (s,
                                                         NewUnionCase (asqlexpr.GlobalVar,
                                                                       s))])]),
                                   Call (None,
                                         Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]] op_DotGreaterGreater[token,asqlexpr,String](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.String,Test3.Lexer+token]]),
                                         [Call (None,
                                                Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]] op_GreaterGreaterDot[token,String,asqlexpr](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.String,Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]]),
                                                [Lambda (arg00,
                                                         Call (Some (this),
                                                               Result`2 Lparen[ITokenLexer`1](ITokenLexer`1),
                                                               [arg00])),
                                                 Lambda (arg00,
                                                         Call (Some (this),
                                                               Result`2 SqlExpression(ITokenLexer`1),
                                                               [arg00]))]),
                                          Lambda (arg00,
                                                  Call (Some (this),
                                                        Result`2 Rparen[ITokenLexer`1](ITokenLexer`1),
                                                        [arg00]))])]),
                            Call (None,
                                  Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]] op_BarGreaterGreater[token,Tuple`2,asqlexpr](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.Tuple`2[Test3.Parser+Ast+asqlexpr,System.String],Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[System.Tuple`2[Test3.Parser+Ast+asqlexpr,System.String],Test3.Parser+Ast+asqlexpr]),
                                  [Call (None,
                                         Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.Tuple`2[Test3.Parser+Ast+asqlexpr,System.String],Test3.Lexer+token]] op_DotGreaterGreaterDot[token,asqlexpr,String](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.String,Test3.Lexer+token]]),
                                         [Call (None,
                                                Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]] op_DotGreaterGreater[token,asqlexpr,String](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.String,Test3.Lexer+token]]),
                                                [Call (None,
                                                       Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]] op_GreaterGreaterDot[token,String,asqlexpr](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.String,Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]]),
                                                       [Lambda (arg00,
                                                                Call (Some (this),
                                                                      Result`2 Kw_select[ITokenLexer`1](ITokenLexer`1),
                                                                      [arg00])),
                                                        Lambda (arg00,
                                                                Call (Some (this),
                                                                      Result`2 SqlExpression(ITokenLexer`1),
                                                                      [arg00]))]),
                                                 Lambda (arg00,
                                                         Call (Some (this),
                                                               Result`2 Kw_from[ITokenLexer`1](ITokenLexer`1),
                                                               [arg00]))]),
                                          Lambda (arg00,
                                                  Call (Some (this),
                                                        Result`2 Ident[ITokenLexer`1](ITokenLexer`1),
                                                        [arg00]))]),
                                   Lambda (tupledArg,
                                           Let (e, TupleGet (tupledArg, 0),
                                                Let (where,
                                                     TupleGet (tupledArg, 1),
                                                     NewUnionCase (asqlexpr.Select,
                                                                   e,
                                                                   NewUnionCase (asqlexpr.Ident,
                                                                                 where)))))])]),
                     Call (None,
                           Result`2 wrap_meth[token,asqlexpr](ITokenLexer`1, Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]]),
                           [stream, body]))))

Name: CreateFunction
Body:
Lambda (this,
        Lambda (stream,
                Let (body,
                     Call (None,
                           Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+arootstmnt,Test3.Lexer+token]] op_BarGreaterGreater[token,Tuple`2,arootstmnt](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.Tuple`2[System.String,Microsoft.FSharp.Collections.FSharpList`1[Test3.Parser+Ast+asqlexpr]],Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[System.Tuple`2[System.String,Microsoft.FSharp.Collections.FSharpList`1[Test3.Parser+Ast+asqlexpr]],Test3.Parser+Ast+arootstmnt]),
                           [Call (None,
                                  Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.Tuple`2[System.String,Microsoft.FSharp.Collections.FSharpList`1[Test3.Parser+Ast+asqlexpr]],Test3.Lexer+token]] op_DotGreaterGreaterDot[token,String,FSharpList`1](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.String,Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Microsoft.FSharp.Collections.FSharpList`1[Test3.Parser+Ast+asqlexpr],Test3.Lexer+token]]),
                                  [Call (None,
                                         Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.String,Test3.Lexer+token]] op_GreaterGreaterDot[token,String,String](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.String,Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.String,Test3.Lexer+token]]),
                                         [Call (None,
                                                Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.String,Test3.Lexer+token]] op_GreaterGreaterDot[token,String,String](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.String,Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.String,Test3.Lexer+token]]),
                                                [Lambda (arg00,
                                                         Call (Some (this),
                                                               Result`2 Kw_create[ITokenLexer`1](ITokenLexer`1),
                                                               [arg00])),
                                                 Lambda (arg00,
                                                         Call (Some (this),
                                                               Result`2 Kw_function[ITokenLexer`1](ITokenLexer`1),
                                                               [arg00]))]),
                                          Lambda (arg00,
                                                  Call (Some (this),
                                                        Result`2 Ident[ITokenLexer`1](ITokenLexer`1),
                                                        [arg00]))]),
                                   Call (None,
                                         Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Microsoft.FSharp.Collections.FSharpList`1[Test3.Parser+Ast+asqlexpr],Test3.Lexer+token]] op_LessBarGreater[token,FSharpList`1](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Microsoft.FSharp.Collections.FSharpList`1[Test3.Parser+Ast+asqlexpr],Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Microsoft.FSharp.Collections.FSharpList`1[Test3.Parser+Ast+asqlexpr],Test3.Lexer+token]]),
                                         [Call (None,
                                                Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Microsoft.FSharp.Collections.FSharpList`1[Test3.Parser+Ast+asqlexpr],Test3.Lexer+token]] op_BarGreaterGreater[token,asqlexpr,FSharpList`1](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[Test3.Parser+Ast+asqlexpr,Microsoft.FSharp.Collections.FSharpList`1[Test3.Parser+Ast+asqlexpr]]),
                                                [Lambda (arg00,
                                                         Call (Some (this),
                                                               Result`2 SqlExpression(ITokenLexer`1),
                                                               [arg00])),
                                                 Lambda (x,
                                                         NewUnionCase (FSharpList`1.Cons,
                                                                       x,
                                                                       NewUnionCase (FSharpList`1.Empty)))]),
                                          Call (None,
                                                Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Microsoft.FSharp.Collections.FSharpList`1[Test3.Parser+Ast+asqlexpr],Test3.Lexer+token]] op_DotGreaterGreater[token,FSharpList`1,String](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Microsoft.FSharp.Collections.FSharpList`1[Test3.Parser+Ast+asqlexpr],Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.String,Test3.Lexer+token]]),
                                                [Call (None,
                                                       Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Microsoft.FSharp.Collections.FSharpList`1[Test3.Parser+Ast+asqlexpr],Test3.Lexer+token]] op_GreaterGreaterDot[token,String,FSharpList`1](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[System.String,Test3.Lexer+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Microsoft.FSharp.Collections.FSharpList`1[Test3.Parser+Ast+asqlexpr],Test3.Lexer+token]]),
                                                       [Lambda (arg00,
                                                                Call (Some (this),
                                                                      Result`2 Kw_begin[ITokenLexer`1](ITokenLexer`1),
                                                                      [arg00])),
                                                        Call (None,
                                                              Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Microsoft.FSharp.Collections.FSharpList`1[Test3.Parser+Ast+asqlexpr],Test3.Lexer+token]] many[token,asqlexpr](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+asqlexpr,Test3.Lexer+token]]),
                                                              [Lambda (arg00,
                                                                       Call (Some (this),
                                                                             Result`2 SqlExpression(ITokenLexer`1),
                                                                             [arg00]))])]),
                                                 Lambda (arg00,
                                                         Call (Some (this),
                                                               Result`2 Kw_end[ITokenLexer`1](ITokenLexer`1),
                                                               [arg00]))])])]),
                            Lambda (x,
                                    Application (Lambda (tupledArg,
                                                         Let (arg0,
                                                              TupleGet (tupledArg,
                                                                        0),
                                                              Let (arg1,
                                                                   TupleGet (tupledArg,
                                                                             1),
                                                                   NewUnionCase (arootstmnt.CreateFunction,
                                                                                 arg0,
                                                                                 arg1)))),
                                                 x))]),
                     Call (None,
                           Result`2 wrap_meth[token,arootstmnt](ITokenLexer`1, Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test3.Lexer+token],Falka.Comb+Result`2[Test3.Parser+Ast+arootstmnt,Test3.Lexer+token]]),
                           [stream, body]))))

