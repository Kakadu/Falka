Name: Twonumbers
Body:
Lambda (this,
        Lambda (stream,
                Let (body,
                     Call (None,
                           Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test2+token],Falka.Comb+Result`2[Test2+ast,Test2+token]] op_BarGreaterGreater[token,Double,ast](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test2+token],Falka.Comb+Result`2[System.Double,Test2+token]], Microsoft.FSharp.Core.FSharpFunc`2[System.Double,Test2+ast]),
                           [Call (None,
                                  Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test2+token],Falka.Comb+Result`2[System.Double,Test2+token]] op_GreaterGreaterDot[token,Double,Double](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test2+token],Falka.Comb+Result`2[System.Double,Test2+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test2+token],Falka.Comb+Result`2[System.Double,Test2+token]]),
                                  [Lambda (arg00,
                                           Call (Some (this),
                                                 Result`2 Number[ITokenLexer`1](ITokenLexer`1),
                                                 [arg00])),
                                   Lambda (arg00,
                                           Call (Some (this),
                                                 Result`2 Number[ITokenLexer`1](ITokenLexer`1),
                                                 [arg00]))]),
                            Lambda (s, NewUnionCase (ast.ANumber, s))]),
                     Call (None,
                           Result`2 wrap_meth[token,ast](ITokenLexer`1, Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test2+token],Falka.Comb+Result`2[Test2+ast,Test2+token]]),
                           [stream, body]))))

Name: Expression
Body:
Lambda (this,
        Lambda (stream,
                Let (body,
                     Call (None,
                           Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test2+token],Falka.Comb+Result`2[Test2+ast,Test2+token]] op_LessBarGreater[token,ast](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test2+token],Falka.Comb+Result`2[Test2+ast,Test2+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test2+token],Falka.Comb+Result`2[Test2+ast,Test2+token]]),
                           [Call (None,
                                  Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test2+token],Falka.Comb+Result`2[Test2+ast,Test2+token]] pipe3[token,Double,String,ast,ast](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test2+token],Falka.Comb+Result`2[System.Double,Test2+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test2+token],Falka.Comb+Result`2[System.String,Test2+token]], Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test2+token],Falka.Comb+Result`2[Test2+ast,Test2+token]], Microsoft.FSharp.Core.FSharpFunc`2[System.Double,Microsoft.FSharp.Core.FSharpFunc`2[System.String,Microsoft.FSharp.Core.FSharpFunc`2[Test2+ast,Test2+ast]]]),
                                  [Lambda (arg00,
                                           Call (Some (this),
                                                 Result`2 Number[ITokenLexer`1](ITokenLexer`1),
                                                 [arg00])),
                                   Lambda (arg00,
                                           Call (Some (this),
                                                 Result`2 Operator[ITokenLexer`1](ITokenLexer`1),
                                                 [arg00])),
                                   Lambda (arg00,
                                           Call (Some (this),
                                                 Result`2 Expression(ITokenLexer`1),
                                                 [arg00])),
                                   Lambda (a,
                                           Lambda (op,
                                                   Lambda (c,
                                                           NewUnionCase (ast.AExpr,
                                                                         op,
                                                                         NewUnionCase (ast.ANumber,
                                                                                       a),
                                                                         c))))]),
                            Call (None,
                                  Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test2+token],Falka.Comb+Result`2[Test2+ast,Test2+token]] op_BarGreaterGreater[token,Double,ast](Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test2+token],Falka.Comb+Result`2[System.Double,Test2+token]], Microsoft.FSharp.Core.FSharpFunc`2[System.Double,Test2+ast]),
                                  [Lambda (arg00,
                                           Call (Some (this),
                                                 Result`2 Number[ITokenLexer`1](ITokenLexer`1),
                                                 [arg00])),
                                   Lambda (x, NewUnionCase (ast.ANumber, x))])]),
                     Call (None,
                           Result`2 wrap_meth[token,ast](ITokenLexer`1, Microsoft.FSharp.Core.FSharpFunc`2[Falka.Comb+ITokenLexer`1[Test2+token],Falka.Comb+Result`2[Test2+ast,Test2+token]]),
                           [stream, body]))))

